#include <stdio.h>



int main()
{
  int A, B ;
  scanf("%d", &A);
    A = B ;

  printf("A 는 3보다 크다. 그리고 10 보다 작다. : %d\n", 3 < A && A < 10);
  printf("A 는 3보다 크다. 그리고 10 보다 크다. : %d\n", 3 < A && 10 < A);
    printf(" A 는 1보다 크다, 그리고 100보다 작다 : %d\n", 1 < A && A < 100) ;
    printf(" A 는 1보다 크다, 그리고 100보다 크다 : %d\n", 1 < A && 100 < A) ;
  
  printf("A 는 5 이거나 4이다. : %d\n", A == 5 || A == 4);
  printf("A 는 6 이거나 7이다. : %d\n", A == 6 || A == 7);
    printf("A 는 1 이거나 2이다. : %d\n", A == 1 || A == 2);
  printf("A 는 3 이거나 4이다. : %d\n", A == 3 || A == 4);

  A += 5;
  printf("%d <= A에 5를 더했고 \n", A);
  A -= 3;
  printf("%d <= A에 3을 뺐고 \n", A);
  A *= 5;
  printf("%d <= A에 5를 곱했고 \n", A);
  A /= 7;
  printf("%d <= A에 7의 나머지 값 \n", A);
  A %= 4;
  printf("%d <= A에 마지막으로 4로 나눈 값\n", A);
    
    A = A << 2 ;
    printf(" A << 2 : %d \n", A);
    
    B = B * 8 << 1;
	B = B / 8 >> 0;
	
	printf("%hhu ", B);
	printf("%hhu", B);

--------------------------------------------------------------
    
int main()
{
    	int input;
	scanf("%d", &input);
	
  for(int i=1; i<=9; i++)
	{
    printf("%d X %d = %d\n", input, i, i*input );
  }
}
--------------------------------------------------------------
    
int main()
{
    int input ;
    scanf("%d", &input);
    
    int sum = 0;
    for(int i=0; i<=input; i++)
        sum += i ;
    printf("%d \n", sum); 
    
    	int arr[5];
	for(int i=0; i<5; i++)
	{
		printf("%d 주소에 넣을 값 : ", i);
		scanf("%d", &arr[i]);
	}
	
	int sum = 0;
	for(int j=0; j<5; j++)
	{
		sum = sum + arr[j]; 
	}
	
	printf("모든 주소의 합 값 : %d", sum);
    
--------------------------------------------------------------
    
        char  1 byte
        short 2 byte
정수형   int   4 byte
        long  4 byte
        long long 8 byte
        
        float  4 byte
실수형   double 8 byte
        long double 8byte 이상
    
--------------------------------------------------------------
    
    int main()
    
	char a[1000];

	scanf("%s", a);
	printf("%s", a);
    
--------------------------------------------------------------
    
    int arr1[] = {1, 2, 3, 4, 5};
  int arr2[] = {2519, 31, 7988, 165326, 100, 150};
  int arr3[] = {5, 25, 34, 60, 1, 4, 435, 9, 78};
  
  printf("%d\n", sizeof(arr1) / sizeof(int));
  printf("%d\n", sizeof(arr2) / sizeof(int));
  printf("%d\n", sizeof(arr3) / sizeof(int));
  
--------------------------------------------------------------

	int arr[5] = {1, 33 , 47, 102, 155}; // 선언과 동시에 초기화
	int length = sizeof(arr) / sizeof(arr[0]);

	printf("배열의 길이 : %d\n", length);

	for(int i=0; i<5; i++)
	{
		printf("arr 배열의 인덱스 %d 의 값 : %d\n", i, arr[i]);
	}

int main()
{
    int arr[5] = {50, 100, 150, 50, 100};
    int length = sizeof(arr) / sizeof(arr[0]); 
    int sum = 0;
    
    for(int i=0; i<length-1; i++)
        sum += arr[i]<arr[i+1];
    
    printf("%d", sum); 
    
    return 0 ;
}
--------------------------------------------------------------
int main()
{
	for(int i=0; i<3; i++)
	{
		for(int j=0; j<=5; j++)
		{
			printf("%d", j);
		}
		printf("\n");
	}
--------------------------------------------------------------
    int main()          // 별 증가 코드
	int n;
	scanf("%d", &n);
	
	for(int i=0; i<n; i++)
	{
		for(int j=0; j<=i; j++)
		{
			printf("*");
		}
		printf("\n");
	}
--------------------------------------------------------------
    int main()            //별 감소 코드
{  
	int n;
	scanf("%d", &n);
	
	for(int i=n; 0<i; i--)
	{
		for(int j=0; j<i; j++)
		{
			printf("*");
		}
		printf("\n");
	}

return 0;
}
--------------------------------------------------------------
    int main()             // 별 x2 증가 코드
{
	int n;
	scanf("%d", &n);
	
	for(int i=0; i<n; i++)
	{
		for(int j=0; j<i*2+1; j++)
		{
			printf("*");
		}
		printf("\n");
	}

return 0;
}
--------------------------------------------------------------
int main()              //   별 피라미드 ****
{
	for(int i=0; i<5; i++)
	{
		// 공백 문자는 첫 줄부터 4, 3, 2, 1, 0개 출력돼야 합니다.
		for(int j=4; j>i; j--)
		{
			printf(" ");
		}
		
		// 별은 첫 줄부터 1, 3, 5, 7, 9개 출력돼야 합니다.
		for(int k=0; k<i*2+1; k++)
		{
			printf("*");
		}
		
		printf("\n");
	}

	return 0;
}
--------------------------------------------------------------
    
    int main()             //  헬로우 몇번 나오는지 맞추는 문제 다시한번 검토 못 풀음***
    {
        for(int i=0; i<5; i++)
        {
            for(int j=0; j<i+2; j+=2)
            {
                printf("Hello!");
            }
            printf("\n");
        }
        return 0 ;
    }
--------------------------------------------------------------
    
    int main()                //  2차원배열 
{
	int tarr[3][4] =
	{
		{1, 2, 3, 4},
		{5, 6, 7, 8},
		{9, 10, 11, 12}
	};
	
	for(int i=0; i<3; i++)
	{
		for(int j=0; j<4; j++)
		{
			printf("%d ", tarr[i][j]);
		}
		printf("\n");
	}
	
	return 0;
}

--------------------------------------------------------------
    
    int main()                 // 2차원배열 문제 
{
	int tarr[3][4];
	
	// 이차원 배열을 만드는 반복문 입니다.
	for(int i=0; i<3; i++)
	{
		for(int j=0; j<4; j++)
		{
			tarr[i][j] = (i+1)*(j+1);
		}
	}
	
	// 이차원 배열을 출력하는 반복문 입니다.
	for(int i=0; i<3; i++)
	{
		for(int j=0; j<4; j++)
		{
			printf("%d ", tarr[i][j]);
		}
		printf("\n");
	}

	return 0;
}
--------------------------------------------------------------    
    
    int main()                          // 짝수 판별
{
	int a ;
	scanf("%d", &a);
	
	if(a%2 == 0)
	{
		printf("입력받은 정수는 짝수입니다.");
	}
	else
	{
		printf("입력받은 정수는 홀수입니다.");
	}

  return 0;
}
--------------------------------------------------------------
    
    int main()                            // 10이하,초과와 짝수, 홀수 판별
{
	int num;
	scanf("%d", &num);
	
	if( 10 < num && num%2 == 0 )
	{
		printf("%d(은)는 10 초과의 짝수입니다.", num);
	}
	else if( 10 < num && num%2 == 1 )
	{
		printf("%d(은)는 10 초과의 홀수입니다.", num);
	}
	else if( 10 >= num && num%2 == 0)
	{
		printf("%d(은)는 10 이하의 짝수입니다.", num);
	}
	else
	{
		printf("%d(은)는 10 이하의 홀수입니다.", num);
	}
}
--------------------------------------------------------------    
    
    int main()                     // switch 문 케이스별로 쓰기
{
	int input ;
	scanf("%d", &input);
	
	switch(input)
	{
		case 1:
			printf("메뉴 출력");
			break;
		case 2:
			printf("추가");
			break;
		case 3:
			printf("수정");
			break;
		case 4:
			printf("삭제");
			break;
		case 5:
			printf("종료");
			break;
		default:
			printf("올바른 번호를 입력하세요.");
			break;
	}	
	
	return 0;
}
--------------------------------------------------------------
    
    int main()                             // 홀수, 짝수 카운트 코드
{  
  int arr[10] = {5, 10, 15, 22, 23, 102, 99, 102, 130, 8};
  int odd = 0;
  int even = 0;
  
  for(int i=0; i<10; i++)
	{
		if(arr[i]%2 == 0)
		{
			even++;
		}
		else
		{
			odd++;
		}
	}
  
  printf("홀수의 갯수는 %d개 입니다.\n", odd);
  printf("짝수의 갯수는 %d개 입니다.\n", even);
  
  return 0;
}
--------------------------------------------------------------
    
    int main()                                 // 배열에서 가장 작은 수 판별 
{
	int arr[10] = {1032, 99, 1004, 234, 452, 8, 922, 445, 246, 2048};
	int min = 8;

	for(int i=0; i<10; i++)
	{
		if(min == arr[i])
		{
			min = arr[i];
		}
	}

	printf("배열 안에서 가장 작은 수는 %d입니다.\n", min);

	return 0;
}
--------------------------------------------------------------
    
    int main()                             // 배열 오름차순으로 정렬
{
	int arr[10] = {9, 17, 5, 6, 124, 112, 1, 3, 87, 55};
	int temp;
	int length = 10;
	
	for (int i=0; i<10; i++)
	{
		for (int j=0; j<10; j++)
		{
			if (arr[j] < arr[i])
			{
				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}

	for(int n=0; n<10; n++)
		printf("%d ", arr[n]);
	
	return 0;
}
--------------------------------------------------------------
    
    int main()                         // while 을 사용한 삽입정렬 다시 하도록 이해가 필요함@@@
{                                        // 오름차순 코드
	int arr[10] = {9, 17, 5, 6, 124, 112, 1, 3, 87, 55};
	int length = sizeof(arr)/sizeof(int) ;

	int j;
	int temp;
	for(int i=1; i<length; i++)
	{
		temp = arr[i] ;
		j = i-1 ;
		while(0<=j && temp<arr[j])
		{
			arr[j+1] = arr[j] ;
			j--;
		}
		arr[j+1] = temp ;
		}
	
	for(int i=0; i<length; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
===============================================================
    
    int main()                            // while 을 사용한 삽입정렬 다시 하도록 이해가 필요함@@@
{                                        // 내림차순 코드
	int arr[10] = {9, 17, 5, 6, 124, 112, 1, 3, 87, 55};
	int length = sizeof(arr)/sizeof(int) ;

	int j;
	int temp;
	for(int i=1; i<length; i++)
	{
		temp = arr[i] ;
		j = i-1 ;
		while(0<=j && temp>arr[j])
		{
			arr[j+1] = arr[j] ;
			j--;
		}
		arr[j+1] = temp ;
		}
	
	for(int i=0; i<length; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}
--------------------------------------------------------------
    // void 는 사전적인 의미로 "존재하지 않는다" 라는 의미
    // int main() = int main(void)       같은 의미
--------------------------------------------------------------
    
    int sumNumbers(num1, num2)                //  함수 연습 (기초)
{
	return num1+num2;
}

int main()
{
	int num1;
	int num2;
	scanf("%d", &num1);
	scanf("%d", &num2);
	
	int result = sumNumbers(num1, num2);
	
  printf("a와 b의 합 : %d", result);

  return 0;
}
--------------------------------------------------------------
    
    int swapStudent(int *left, int *right)         // 왼쪽 학생키가 크면 자리를 바꾸는 함수 (포인터 사용)
{
	int temp;
	if(*left > *right)
	{
		temp = *left;
		*left = *right;
		*right= temp;
	}
}

int main()
{
	int left;
	int right;
	scanf("%d", &left);
	scanf("%d", &right);
	
	swapStudent(&left, &right);
	
	printf("왼쪽 : %d, 오른쪽 : %d", left, right);
	
	return 0;
}
--------------------------------------------------------------
void swap(int *a, int *b)                          // 포인터 사용한 정렬
{
	int temp;

	temp = *a;
	*a = *b;
	*b = temp;
}

int main()
{
	int a, b;

	a = 10;
	b = 20;

	printf("swap 전 : %d %d\n", a, b);

	swap(&a, &b);

	printf("swap 후 : %d %d\n", a, b);

	return 0;
}
--------------------------------------------------------------
    // *(arr+i) == arr[i]
--------------------------------------------------------------
    
    void bubbleSort(int *p)                            // 포인터로 버블 정렬 함수 만들기 연습이 필요함 @@
{
	int temp;	
	for(int i=0; i<10; i++)
	{
		for(int j=0; j<10; j++)
		{
			if(*(p+j+1) < *(p+j))
			{
				temp = *(p+j);
				*(p+j) = *(p+j+1);
				*(p+j+1) = temp;
			}
		}
	}
}

int main()
{
	int arr[10];
	for(int i=0; i<10; i++)
	{
		scanf("%d", &arr[i]);
	}

	bubbleSort(&arr);

	for(int i=0; i<10; i++)
	{
		printf("%d ", arr[i]);
	}
	
	return 0;
}
--------------------------------------------------------------    
    
    int main()              // 어렵다 어려워~ 포인터 주관식 문제
    {
        int arr[5] = {1, 3, 5, 7, 9};
        double arr2[5] = {1.1, 3.2, 5.3, 7.4, 9.5 };
        int *arrPtr = arr;
        double *arrPtr2 = arr2; 
        
        (*arrPtr)++;
        *arrPtr2++;
        
        printf("%d %f %ls %f\n", *arrPtr, *arrPtr2, arrPtr, arrPtr2);
}
--------------------------------------------------------------
    
    struct student
    {
        int age;
        char phone_number[14];
        int s_id;
    };
    
    int main()
    {
        struct student goorm = { .age = 20, .phone_number = "010-2440-5416", 10};
        struct student codigm = { 22, "010-1243-1362"};
        
        printf("나이 : %d, 번호 : %s, 학번 : %d\n", goorm.age, goorm.phone_number, goorm.s_id);
        printf("나이 : %d, 번호 : %s, 학번 : %d\n", codigm.age, codigm.phone_number, codigm.s_id);
        
        return 0;
    }
--------------------------------------------------------------
    
      typedef struct _Student{            //구조체 typedef 사용
          int age;
          char phone_number[14];
      } Student ;
    
    int main()
    {
        Student groom;   
        
        printf("나이 ; ") ;
        scanf("%d", &groom.age);
        printf("번호 : ") ;
        scanf("%s"groom.phone_number) ;
        
        printf("----\n 나이 : %d\n번호 : %s----", groom.age, groom.phone_number) ;
        
        return 0;
    }
